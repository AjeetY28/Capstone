package com.myShop.ai.service.impl;

import com.myShop.ai.service.AiChatBotService;
import com.myShop.exceptions.ProductException;
import com.myShop.repository.CartRepository;
import com.myShop.repository.OrderRepository;
import com.myShop.repository.ProductRepository;
import com.myShop.repository.UserRepository;
import com.myShop.response.ApiResponse;
import com.myShop.response.FunctionResponse;
import lombok.RequiredArgsConstructor;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;


@Service
@RequiredArgsConstructor
public class AiChatBotServiceImpl implements AiChatBotService {
    
    String GEMINI_API_KEY="AIzaSyC_ediYsYhtobcMgi8z7bzqVJdZKGs59_g";

    private final CartRepository cartRepository;
    private final OrderRepository orderRepository;
    private final ProductRepository productRepository;
    private final UserRepository userRepository;

    @Override
    public ApiResponse aiChatBot(String prompt, Long productId, Long userId) throws ProductException {

        String GEMINI_API_URL="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key="+GEMINI_API_KEY;

        System.out.println("-------- "+prompt);

        FunctionResponse functionResponse=getFunctionResponse(prompt,productId,userId);

        return null;
    }

    private FunctionResponse getFunctionResponse(String prompt, Long productId, Long userId) throws ProductException {
        String GEMINI_API_URL="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key="+GEMINI_API_KEY;

        JSONObject requestBodyJson=new JSONObject()
                .put("contents",new JSONArray()
                        .put(new JSONObject()
                                .put("parts",new JSONArray()
                                        .put(new JSONObject().put("text",prompt)
                                        )
                                )
                        )
                ).put("tools",new JSONArray()
                        .put(new JSONObject()
                                .put("functionDeclarations",createFunctionDeclarations())
                        )
                );

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<String> requestEntity = new HttpEntity<>(requestBodyJson.toString(), headers);

        RestTemplate restTemplate=new RestTemplate();
        ResponseEntity<String> response=restTemplate.postForEntity(GEMINI_API_URL, requestEntity, String.class);

        String responseBody=response.getBody();
        JSONObject jsonObject=new JSONObject(responseBody);

        System.out.println("functionResponse: "+responseBody);
        JSONArray candidates = jsonObject.getJSONArray("candidates");
        JSONObject firstCandidate = candidates.getJSONObject(0);
        JSONObject content=firstCandidate.getJSONObject("content");
        JSONArray parts=content.getJSONArray("parts");
        JSONObject firstPart=parts.getJSONObject(0);
        JSONObject functionCall=firstPart.getJSONObject("functionCall");

        return processFunctionCall(functionCall,productId,userId);

    }

    private FunctionResponse processFunctionCall(JSONObject functionCall,
                                                Long productId,
                                                Long userId
    ) throws ProductException {

        String functionName=functionCall.getString("name");
        JSONObject args=functionCall.getJSONObject("args");

        FunctionResponse res=new FunctionResponse();
        res.setFunctionName(functionName);
    }

    private JSONArray createFunctionDeclarations() {

        return new JSONArray()
                .put(new JSONObject()
                        .put("name","getUserCart")
                        .put("description","Retrieve the user's cart details")
                        .put("parameters",new JSONObject()
                                .put("type","OBJECT")
                                .put("properties",new JSONObject()
                                        .put("cart",new JSONObject()
                                                .put("type","STRING")
                                                .put("description","Cart Details,like total item in cart,cart item,remove item from cart,cart Id")
                                        )
                                )
                                .put("required",new JSONArray()
                                        .put("cart")
                                )
                        )
                )
                .put(new JSONObject()
                        .put("name","getUsersOrder")
                        .put("description","Retrieve the user's order details")
                        .put("parameters",new JSONObject()
                                .put("type","OBJECT")
                                .put("properties",new JSONObject()
                                        .put("order",new JSONObject()
                                                .put("type","STRING")
                                                .put("description","Order Details,order,total order, current order,delivered order,pending order,current order,cancled order")
                                        )
                                )
                                .put("required",new JSONArray()
                                        .put("order")
                                )
                        )
                )
                .put(new JSONObject()
                        .put("name","getProductDetails")
                        .put("description","Retrieve the product details")
                        .put("parameters",new JSONObject()
                                .put("type","OBJECT")
                                .put("properties",new JSONObject()
                                        .put("product",new JSONObject()
                                                .put("type","STRING")
                                                .put("description","The Product Details like, Product title, product id, prduct color, product size, selling price, mrp price, rating extra...")
                                        )
                                )
                                .put("required",new JSONArray()
                                        .put("prduct")
                                )
                        )
                );

    }
}
